<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vatestar.cm.dao.UserDao">
    
	  <resultMap type="User" id="userMap" autoMapping="true" >
		<id property="id" column="id" />
		<result property="residualMoney" column="residual_money" />
		<result property="consumeMoney" column="consume_money" />
		<result property="residualRresentMoney" column="residual_rresent_money" />
		<result property="consumeRresentMoney" column="consume_rresent_money" />
		<result property="indexUrl" column="index_url" />
		<result property="parentId" column="parent_id" />
		<result property="businessLicense" column="business_license" /> 
		<result property="createTime" column="create_time" />
		  <result property="username" column="username" />
		  <result property="role" column="role" />
    </resultMap>
    <sql id="condition">
		<if test="id != null"> and id = #{id}</if>
		<if test="role != null"> and role = #{role}</if>
		<if test="parentId != null"> and parent_id = #{parentId}</if>
		<if test="state != null"> and state = #{state}</if>
	</sql>
	
    <!-- 登录查询 -->
    <select id="login" parameterType="User" resultMap="userMap">
       select 
         *
       from
         tb_adtive_user
       where
         username=#{username}
         and password=#{password}   
    </select>
    
    <!-- 查询所有的用户 -->
    <select id="queryPage" parameterType="User" resultMap="userMap">
       select
        *
       from
         tb_adtive_user t 
       where 1=1
       	 <include refid="condition"/>
       order by  t.id
       limit #{pageOffset},#{pageSize}
    </select>
    <!-- 查询所有的用户 -->
    <select id="queryPageForCheck" parameterType="User" resultMap="userMap">
       select
        *
       from
         tb_adtive_user t 
       where (role =3 or role=4)
       	 <include refid="condition"/>
       order by  t.id
       limit #{pageOffset},#{pageSize}
    </select>
    
    <!-- 查询所有的用户的个数 -->
    <select id="queryPageForCheckCount" resultType="String">
       select
         count(1)
       from
          tb_adtive_user t 
        where (role =3 or role=4)
       	 <include refid="condition"/>
    </select>
    
    <!-- 查询所有的用户 -->
    <select id="queryPageUserForAd" parameterType="User"  resultType="java.util.HashMap">
		select 
		  t.*,
		  ifnull(ta.gr_count,0) gr_count,
		  ifnull(ta.ct_count,0) ct_count,
		  ifnull(t.`residual_rresent_money`, 0.0) residual_rresent_money,
		  ifnull(t.`consume_rresent_money`, 0.0) consume_rresent_money
		from
		  tb_adtive_user t 
		  left join 
		    (select 
		      *,
		      count(gc.id) gr_count,
		      sum(lc) ct_count 
		    from
		      (select 
		        u.`id`,
		        count(g.`id`) lc 
		      from
		        tb_adtive_user u 
		        left join tb_adtive_group g 
		          on u.id = g.user_id 
		        left join tb_adtive_list l 
		          on g.id = l.group_id 
		      where 1 = 1 
 				<include refid="condition"/>
		      group by g.id) gc 
		    group by gc.id) ta 
		    on t.`id` = ta.id 
		where 1 = 1 
 			<include refid="condition"/>
       limit #{pageOffset},#{pageSize}
    </select>
    
    <!-- 查询所有的用户的个数 -->
    <select id="queryPageCount" resultType="Integer">
       select
         count(1)
       from
          tb_adtive_user t 
       where 1=1 
       	 <include refid="condition"/>
    </select>


	<!-- 查询所有的用户 -->
	<select id="getAllUser" parameterType="map" resultMap="userMap">
		select id,username,role,create_time
		from
		tb_adtive_user
		order by
		<choose>
			<when test="sort != null and sort !='' ">
				#{sort} #{order}
			</when>
			<otherwise>
				create_time desc
			</otherwise>
		</choose>
		limit #{currentRow},#{pageSize}
	</select>

    <select id="queryOne" parameterType="Integer" resultMap="userMap">
       select
         *
       from
          tb_adtive_user t 
       where 
       	 t.id=#{id}
    </select>
    <select id="queryUser" parameterType="User" resultMap="userMap">
       select
         *
       from
          tb_adtive_user t 
       where 
       	 t.username=#{username}
    </select>
    
    <!-- 新增用户信息 -->
    <insert id="saveUser" parameterType="User">
       insert into tb_adtive_user (
		  username,
		  password,
		  role,
		  residual_money,
		  consume_money,
		  residual_rresent_money,
		  consume_rresent_money,
		  cardinality,
		  index_url,
		  qq,
		  phone,
		  parent_id,
		  remark,
		  available,
		  create_time,
		  business_license ) 
		values(#{username},
			#{password},
			#{role},
			#{residualMoney},
			#{consumeMoney},
			#{residualRresentMoney},
			#{consumeRresentMoney},
			#{cardinality},
			#{indexUrl},
			#{qq},
			#{phone},
			#{parentId},
			#{remark},
			#{available},
			#{createTime},
			#{businessLicense}
		  ) ;
    </insert>
    <!-- 修改用户信息 -->
    <update id="updateUser" parameterType="User">
        update tb_adtive_user 
        <set>
        	<if test="username!=null">username=#{username},</if>
			<if test="password!=null">password=#{password},</if>
			<if test="role!=null">role=#{role},</if>
			<if test="residualMoney	!=0"> residual_money =#{residualMoney},</if>
			<if test="consumeMoney	!=0"> consume_money =#{consumeMoney},</if>
			<if test="residualRresentMoney=0">residual_rresent_money=#{residualRresentMoney},</if>
			<if test="consumeRresentMoney!=0">consume_rresent_money=#{consumeRresentMoney},</if>
			<if test="cardinality!=null">	cardinality	=#{cardinality},</if>
			<if test="qq!=null">	qq	=#{qq},</if>
			<if test="indexUrl">	index_url=#{indexUrl},</if>
			<if test="phone!=null">phone=#{phone},</if>
			<if test="parentId!=null">parent_id=#{parentId},</if>
			<if test="remark!=null">remark=#{remark},</if>
			<if test="available!=null">available=#{available},</if>
			<if test="state!=null">state=#{state},</if>
        </set>
        where
          id=#{id}         
    </update>
    
     <!-- 删除用户信息 -->
    <update id="delUser" parameterType="Integer">
         delete
       from
         tb_user
        where
          userId=#{userId}         
    </update>
    <!-- 重置密码 -->
    <update id="resetPassword" parameterType="User">
    	update tb_user set password = #{password} where userId=#{userId}         
    </update>
    
    
</mapper>
